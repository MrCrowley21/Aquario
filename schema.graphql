scalar GenericScalar

type Query {
  users: [UserType]
  user(id: Int): UserType
  userProfile(id: Int): UserProfileType
  me: UserProfileType
}

type UserType {
  id: ID!
  email: String!
}

type UserProfileType {
  id: ID!
  user: UserType!
}

type CreateUser {
  id: ID
}

type ObtainJSONWebToken {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type Verify {
  payload: GenericScalar!
}

type Refresh {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type Mutation {
  createUser(email: String!, password: String!): CreateUser
  login(email: String!, password: String!): ObtainJSONWebToken
  verifyToken(token: String): Verify
  refreshToken(token: String): Refresh
}

